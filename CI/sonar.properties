# Disable C like sources, since analyze C, C++, ObjectiveC not support in free version.
sonar.c.file.suffixes=-
sonar.cpp.file.suffixes=-
sonar.objc.file.suffixes=-

# Project Sources.
sonar.sources=web_allot_test_framework/src/main/java
sonar.tests=web_allot_test_framework/src/test/java

# Load JUnit Tests Results
sonar.junit.reportPaths=web_allot_test_framework/target/surefire-reports

# Load JaCoCo XML Code Coverage Reports
#sonar.coverage.jacoco.xmlReportPaths=web_allot_test_framework/target/site/jacoco/jacoco.xml

# Source Codes Binaries & Libraries
sonar.java.binaries=web_allot_test_framework/target/classes
sonar.java.libraries=web_allot_test_framework/**/*.jar

# Tests Sources Binaries & Libraries
sonar.java.test.binaries=web_allot_test_framework/target/test-classes
sonar.java.test.libraries=web_allot_test_framework/**/*.jar

# Description of the project
sonar.projectDescription="Pipelines Session Demo"

# Scm Web Link
sonar.links.scm=http://bitbucket.rdlab.local/projects/AUT/repos/web_allot_test_framework/browse

# Encoding Sources
sonar.sourceEncoding=UTF-8

# For supported engines, files ignored by the SCM, i.e. files listed in .gitignore, will automatically be ignored by analysis too. Set this property to true to disable that feature.
sonar.scm.exclusions.disabled=true
sonar.scm.disabled=true

# Get in Runtime

# sonar.buildString -
# The string passed with this property will be stored with the analysis and available in the results of api/project_analyses/search,
# thus allowing you to later identify a specific analysis and obtain its ID for use with api/project_analyses/set_baseline.

# sonar.projectBaseDir -
# Use this property when you need analysis to take place in a directory other than the one from which it was launched.
# E.G. analysis begins from jenkins/jobs/myjob/workspace but the files to be analyzed are in ftpdrop/cobol/project1.
# The path may be relative or absolute. Specify not the the source directory, but some parent of the source directory.
# The value specified here becomes the new "analysis directory", and other paths are then specified as though the analysis were starting from the specified value of sonar.projectBaseDir.
# Note that the analysis process will need write permissions in this directory; it is where the sonar.working.directory will be created

# sonar.projectVersion -
# The project version.

# sonar.links.ci -
# Link to Jenkins job which builds this project.

# sonar.projectKey
# The project's unique key. Allowed characters are: letters, numbers, -, _, . and :, with at least one non-digit.

#sonar.projectName=
# Name of the project that will be displayed on the web interface.